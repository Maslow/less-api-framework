
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oss-ingress
spec:
  # apisix-ingress-controller is only interested in Ingress
  # resources with the matched ingressClass name, in our case,
  # it's apisix.
  ingressClassName: apisix
  rules:
  - host: oss.{{ .Values.global.domain }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}-minio
            port:
              number: 9000
        path: /
        pathType: Prefix


# ingress-oss-subdomain.yml
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oss-ingress-subdomain
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 4096m
spec:
  ingressClassName: apisix
  rules:
  - host: "*.oss.{{ .Values.global.domain }}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ .Release.Name }}-minio
            port:
              number: 9000


# minio console ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: minio-console-ingress
spec:
  # apisix-ingress-controller is only interested in Ingress
  # resources with the matched ingressClass name, in our case,
  # it's apisix.
  ingressClassName: apisix
  rules:
  - host: minio.{{ .Values.global.domain }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}-minio-console
            port:
              number: 9001
        path: /
        pathType: Prefix

