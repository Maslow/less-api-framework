apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: gateway-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: domains.gateway.laf.dev
spec:
  group: gateway.laf.dev
  names:
    kind: Domain
    listKind: DomainList
    plural: domains
    singular: domain
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Domain is the Schema for the domains API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DomainSpec defines the desired state of Domain
            properties:
              backendType:
                enum:
                - app
                - bucket
                - website
                type: string
              certConfigRef:
                type: string
              cluster:
                properties:
                  key:
                    type: string
                  url:
                    type: string
                required:
                - key
                - url
                type: object
              domain:
                pattern: ^([a-zA-Z0-9]([a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\.)+[a-zA-Z]{2,6}$
                type: string
              region:
                pattern: ^[a-zA-Z0-9-]+$
                type: string
            required:
            - backendType
            - cluster
            - domain
            - region
            type: object
          status:
            description: DomainStatus defines the observed state of Domain
            properties:
              certConfigRef:
                type: string
            required:
            - certConfigRef
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: gateways.gateway.laf.dev
spec:
  group: gateway.laf.dev
  names:
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Gateway is the Schema for the gateways API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GatewaySpec defines the desired state of Gateway
            properties:
              appid:
                type: string
              buckets:
                items:
                  type: string
                type: array
              websites:
                items:
                  type: string
                type: array
            required:
            - appid
            type: object
          status:
            description: GatewayStatus defines the observed state of Gateway
            properties:
              appRoute:
                properties:
                  domain:
                    type: string
                  domainName:
                    type: string
                  domainNamespace:
                    type: string
                required:
                - domain
                - domainName
                - domainNamespace
                type: object
              bucketRoutes:
                additionalProperties:
                  properties:
                    domain:
                      type: string
                    domainName:
                      type: string
                    domainNamespace:
                      type: string
                  required:
                  - domain
                  - domainName
                  - domainNamespace
                  type: object
                type: object
              conditions:
                description: 'Conditions - Type: Ready'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              websiteRoutes:
                additionalProperties:
                  properties:
                    domain:
                      type: string
                    domainName:
                      type: string
                    domainNamespace:
                      type: string
                  required:
                  - domain
                  - domainName
                  - domainNamespace
                  type: object
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: routes.gateway.laf.dev
spec:
  group: gateway.laf.dev
  names:
    kind: Route
    listKind: RouteList
    plural: routes
    singular: route
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Route is the Schema for the routes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RouteSpec defines the desired state of Route
            properties:
              backend:
                description: Backend defines the desired state of Backend
                properties:
                  serviceName:
                    type: string
                  servicePort:
                    format: int32
                    type: integer
                required:
                - serviceName
                - servicePort
                type: object
              certConfigRef:
                type: string
              domain:
                type: string
              domainName:
                type: string
              domainNamespace:
                type: string
              enableWebSocket:
                type: boolean
              passHost:
                type: string
              pathRewrite:
                properties:
                  regex:
                    type: string
                  replacement:
                    type: string
                required:
                - regex
                - replacement
                type: object
            required:
            - backend
            - domain
            - domainName
            - domainNamespace
            type: object
          status:
            description: RouteStatus defines the observed state of Route
            properties:
              Domain:
                type: string
              supportSSL:
                type: boolean
            required:
            - Domain
            - supportSSL
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gateway-controller-manager
  namespace: gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gateway-leader-election-role
  namespace: gateway-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: gateway-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.laf.dev
  resources:
  - domains
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.laf.dev
  resources:
  - domains/finalizers
  verbs:
  - update
- apiGroups:
  - gateway.laf.dev
  resources:
  - domains/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.laf.dev
  resources:
  - gateways
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.laf.dev
  resources:
  - gateways/finalizers
  verbs:
  - update
- apiGroups:
  - gateway.laf.dev
  resources:
  - gateways/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.laf.dev
  resources:
  - routes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - gateway.laf.dev
  resources:
  - routes/finalizers
  verbs:
  - update
- apiGroups:
  - gateway.laf.dev
  resources:
  - routes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - buckets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - oss.laf.dev
  resources:
  - buckets/finalizers
  verbs:
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - buckets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - stores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - oss.laf.dev
  resources:
  - stores/finalizers
  verbs:
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - stores/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - users
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - oss.laf.dev
  resources:
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - users/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gateway-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gateway-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gateway-leader-election-rolebinding
  namespace: gateway-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gateway-leader-election-role
subjects:
- kind: ServiceAccount
  name: gateway-controller-manager
  namespace: gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gateway-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gateway-manager-role
subjects:
- kind: ServiceAccount
  name: gateway-controller-manager
  namespace: gateway-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gateway-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gateway-proxy-role
subjects:
- kind: ServiceAccount
  name: gateway-controller-manager
  namespace: gateway-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: e68e7628.laf.dev
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: gateway-manager-config
  namespace: gateway-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: gateway-controller-manager-metrics-service
  namespace: gateway-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: gateway-controller-manager
  namespace: gateway-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: docker.io/lafyun/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/labring/laf-gateway-controller:latest
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: gateway-controller-manager
      terminationGracePeriodSeconds: 10
