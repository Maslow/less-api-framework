apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: runtime-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: functions.runtime.laf.dev
spec:
  group: runtime.laf.dev
  names:
    kind: Function
    listKind: FunctionList
    plural: functions
    singular: function
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Function is the Schema for the functions API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FunctionSpec defines the desired state of Function
            properties:
              description:
                description: Description of function
                type: string
              methods:
                description: 'Allowed HTTP methods. If empty, http access is disabled.
                  The value of this field can be any one or a combination of the following:
                  GET, POST, PUT, DELETE, PATCH, HEAD, OPTIONS, CONNECT, TRACE. The
                  default values are: ["GET", "POST", "PUT", "DELETE"]. If the value
                  is "*", all methods are allowed.'
                items:
                  type: string
                type: array
              source:
                description: Function source
                properties:
                  codes:
                    description: Source codes of the function
                    type: string
                  uri:
                    description: Codes uri of the function
                    type: string
                  version:
                    default: 0
                    description: Version of the function
                    format: int64
                    type: integer
                required:
                - version
                type: object
              websocket:
                default: false
                description: Websocket enabled, defaults to false
                type: boolean
            required:
            - description
            - methods
            - source
            - websocket
            type: object
          status:
            description: FunctionStatus defines the observed state of Function
            properties:
              state:
                default: Deployed
                description: State of the function
                enum:
                - Deployed
                type: string
            required:
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: packages.runtime.laf.dev
spec:
  group: runtime.laf.dev
  names:
    kind: Package
    listKind: PackageList
    plural: packages
    singular: package
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Package is the Schema for the packages API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PackageSpec defines the desired state of Package
            properties:
              name:
                description: Name of package.
                type: string
              registry:
                description: Registry of package.
                type: string
              type:
                description: Type of the package. eg. npm, pip, go, composer, etc.
                type: string
              version:
                default: latest
                description: Version of package. default is latest.
                type: string
            required:
            - name
            - type
            type: object
          status:
            description: PackageStatus defines the observed state of Package
            properties:
              actualVersion:
                description: Actual version of package.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: runtimes.runtime.laf.dev
spec:
  group: runtime.laf.dev
  names:
    kind: Runtime
    listKind: RuntimeList
    plural: runtimes
    singular: runtime
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Runtime is the Schema for the runtimes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RuntimeSpec defines the desired state of Runtime
            properties:
              deprecated:
                description: Deprecated
                type: boolean
              image:
                description: Images of the runtime
                properties:
                  init:
                    description: Init image (e.g. docker.io/lafyun/app-service-init:latest)
                      - install the dependencies (e.g. npm install) - prepare the
                      functions (deploy & compile)
                    type: string
                  main:
                    description: Main image (e.g. docker.io/lafyun/app-service:latest)
                    type: string
                  sidecar:
                    description: Sidecar image
                    type: string
                required:
                - main
                type: object
              type:
                description: Type of the runtime. eg. node:laf, node:tcb, go:laf,
                  python:laf, php:laf,  etc.
                type: string
              version:
                description: Version of the runtime
                properties:
                  autoUpgradeFrom:
                    description: Versions that should auto upgrade from
                    items:
                      type: string
                    type: array
                  breakBefore:
                    description: Version that is breaking from
                    type: string
                  mustUpgradeFrom:
                    description: Versions that must upgrade from
                    items:
                      type: string
                    type: array
                  upgradeFrom:
                    description: Versions that suggested to upgrade from
                    items:
                      type: string
                    type: array
                  version:
                    description: Version is the version of the runtime
                    type: string
                type: object
            required:
            - image
            - type
            - version
            type: object
          status:
            description: RuntimeStatus defines the observed state of Runtime
            properties:
              appCount:
                description: App count of the runtime
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: runtime-controller-manager
  namespace: runtime-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: runtime-leader-election-role
  namespace: runtime-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: runtime-manager-role
rules:
- apiGroups:
  - runtime.laf.dev
  resources:
  - functions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - runtime.laf.dev
  resources:
  - functions/finalizers
  verbs:
  - update
- apiGroups:
  - runtime.laf.dev
  resources:
  - functions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - runtime.laf.dev
  resources:
  - packages
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - runtime.laf.dev
  resources:
  - packages/finalizers
  verbs:
  - update
- apiGroups:
  - runtime.laf.dev
  resources:
  - packages/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - runtime.laf.dev
  resources:
  - runtimes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - runtime.laf.dev
  resources:
  - runtimes/finalizers
  verbs:
  - update
- apiGroups:
  - runtime.laf.dev
  resources:
  - runtimes/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: runtime-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: runtime-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: runtime-leader-election-rolebinding
  namespace: runtime-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: runtime-leader-election-role
subjects:
- kind: ServiceAccount
  name: runtime-controller-manager
  namespace: runtime-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: runtime-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: runtime-manager-role
subjects:
- kind: ServiceAccount
  name: runtime-controller-manager
  namespace: runtime-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: runtime-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: runtime-proxy-role
subjects:
- kind: ServiceAccount
  name: runtime-controller-manager
  namespace: runtime-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: c2f5e1fe.laf.dev
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: runtime-manager-config
  namespace: runtime-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: runtime-controller-manager-metrics-service
  namespace: runtime-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: runtime-controller-manager
  namespace: runtime-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: docker.io/lafyun/kube-rbac-proxy:v0.13.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/labring/laf-runtime-controller:dev
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: runtime-controller-manager
      terminationGracePeriodSeconds: 10
