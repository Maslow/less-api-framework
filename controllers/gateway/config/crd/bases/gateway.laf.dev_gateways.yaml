---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: gateways.gateway.laf.dev
spec:
  group: gateway.laf.dev
  names:
    kind: Gateway
    listKind: GatewayList
    plural: gateways
    singular: gateway
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Gateway is the Schema for the gateways API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GatewaySpec defines the desired state of Gateway
            properties:
              appid:
                description: AppId是应用id，字母数字组成，长度5至16位，必须存在
                pattern: ^[a-zA-Z0-9]{5,16}$
                type: string
              buckets:
                description: Buckets是存储桶, 是一个数组，可选存在
                items:
                  type: string
                type: array
              websites:
                description: Websites是静态站点，是一个数组，可选存在
                items:
                  type: string
                type: array
            required:
            - appid
            type: object
          status:
            description: GatewayStatus defines the observed state of Gateway
            properties:
              appRoute:
                description: AppRoute 是应用路由
                properties:
                  domain:
                    description: Domain 是域名，必须存在
                    type: string
                  domainName:
                    description: DomainName 是域名名称，必须存在
                    type: string
                  domainNamespace:
                    description: DomainNamespace 是域名所在的命名空间，必须存在
                    type: string
                required:
                - domain
                - domainName
                - domainNamespace
                type: object
              bucketRoutes:
                additionalProperties:
                  properties:
                    domain:
                      description: Domain 是域名，必须存在
                      type: string
                    domainName:
                      description: DomainName 是域名名称，必须存在
                      type: string
                    domainNamespace:
                      description: DomainNamespace 是域名所在的命名空间，必须存在
                      type: string
                  required:
                  - domain
                  - domainName
                  - domainNamespace
                  type: object
                description: BucketRoutes 是存储桶路由
                type: object
              conditions:
                description: 'Conditions - Type: Ready'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              websiteRoutes:
                additionalProperties:
                  properties:
                    domain:
                      description: Domain 是域名，必须存在
                      type: string
                    domainName:
                      description: DomainName 是域名名称，必须存在
                      type: string
                    domainNamespace:
                      description: DomainNamespace 是域名所在的命名空间，必须存在
                      type: string
                  required:
                  - domain
                  - domainName
                  - domainNamespace
                  type: object
                description: WebsiteRoutes 是静态站点路由
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
