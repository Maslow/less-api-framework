---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: users.oss.laf.dev
spec:
  group: oss.laf.dev
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the users API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              appid:
                description: AppId is the unique identifier for the app, usually used
                  as the username of this User.
                maxLength: 32
                minLength: 3
                type: string
              capacity:
                description: Capacity that user desired.
                properties:
                  bucketCount:
                    default: 0
                    description: The user's number of buckets.
                    format: int64
                    minimum: 0
                    type: integer
                  objectCount:
                    default: 0
                    description: The user's number of objects.
                    format: int64
                    minimum: 0
                    type: integer
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The user's storage space. The default value is 0
                      which means unlimited.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              password:
                description: Password is the secret name of the user, which is used
                  to authenticate the user.
                maxLength: 64
                minLength: 3
                type: string
              provider:
                description: Provider name of a oss store. It's read-only after creation.
                  The controller will create the corresponding storage resources based
                  on this provider.
                type: string
              region:
                description: Region of oss store.
                type: string
            required:
            - appid
            - password
            - provider
            - region
            type: object
          status:
            description: UserStatus defines the observed state of User
            properties:
              accessKey:
                description: AccessKey is the access key of the user
                type: string
              capacity:
                description: The user's capacity observed by the controller.
                properties:
                  bucketCount:
                    default: 0
                    description: The user's number of buckets.
                    format: int64
                    minimum: 0
                    type: integer
                  objectCount:
                    default: 0
                    description: The user's number of objects.
                    format: int64
                    minimum: 0
                    type: integer
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The user's storage space. The default value is 0
                      which means unlimited.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              conditions:
                description: 'Conditions - Type: Ready'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              endpoint:
                description: Endpoint is the store service endpoint.
                type: string
              region:
                description: Region of oss store.
                type: string
              secretKey:
                description: SecretKey is the secret key of the user
                type: string
              storeName:
                description: StoreName of the oss store. It's read-only after creation.
                  The controller has created the corresponding storage resources based
                  on this store.
                type: string
              storeNamespace:
                type: string
            required:
            - region
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
