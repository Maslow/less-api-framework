apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: oss-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: buckets.oss.laf.dev
spec:
  group: oss.laf.dev
  names:
    kind: Bucket
    listKind: BucketList
    plural: buckets
    shortNames:
    - bucket
    singular: bucket
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.policy
      name: POLICY
      type: string
    - jsonPath: .spec.storage
      name: STORAGE
      type: string
    - jsonPath: .status.versioning
      name: VERSIONING
      type: string
    - jsonPath: .status.capacity.maxStorage
      name: MAX-STORAGE
      type: string
    - jsonPath: .status.capacity.storage
      name: USED-STORAGE
      type: string
    name: v1
    schema:
      openAPIV3Schema:
        description: Bucket is the Schema for the buckets API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BucketSpec defines the desired state of Bucket
            properties:
              policy:
                description: Policy of bucket in oss, defaults to 'private'.
                enum:
                - private
                - readonly
                - readwrite
                type: string
              storage:
                anyOf:
                - type: integer
                - type: string
                description: Storage space of this bucket.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
            required:
            - storage
            type: object
          status:
            description: BucketStatus defines the observed state of Bucket
            properties:
              capacity:
                description: Capacity of this bucket.
                properties:
                  maxStorage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: Storage space of this bucket.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  objectCount:
                    default: 0
                    description: The user's number of objects.
                    format: int64
                    minimum: 0
                    type: integer
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The used storage space.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              conditions:
                description: 'Conditions - Type: Ready'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              policy:
                description: Policy of bucket in oss.
                type: string
              user:
                description: Username of bucket in oss.
                type: string
              versioning:
                description: Versioning of bucket in oss.
                type: boolean
            required:
            - capacity
            - policy
            - user
            - versioning
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: stores.oss.laf.dev
spec:
  group: oss.laf.dev
  names:
    kind: Store
    listKind: StoreList
    plural: stores
    singular: store
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: Store is the Schema for the stores API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: StoreSpec defines the desired state of Store
            properties:
              accessKey:
                description: AccessKey is the access key which have admin rights of
                  the store service.
                type: string
              capacity:
                description: Capacity is the maximum capacity of the store.
                properties:
                  bucketCount:
                    default: 0
                    description: The number of buckets. The default value is 0 which
                      means unlimited.
                    format: int64
                    minimum: 0
                    type: integer
                  objectCount:
                    default: 0
                    description: The number of objects. The default value is 0 which
                      means unlimited.
                    format: int64
                    minimum: 0
                    type: integer
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The storage space. The unit is MB. The default value
                      is 0 which means unlimited.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  userCount:
                    description: The user count of a store.
                    format: int64
                    type: integer
                type: object
              endpoint:
                description: Endpoint is the store service endpoint. This is url string,
                  like "http://minio-service:9000"
                type: string
              priority:
                default: 10
                description: Priority is used to guide the allocation of resources.
                  The higher the priority, the first to allocate resources in. If
                  this value is 0, this store will not be selected for allocating
                  new user.
                maximum: 100
                minimum: 0
                type: integer
              provider:
                description: 'Provider identifies the store provider. This is readonly,
                  cannot be modified after creation. This value could be the following:
                  - "minio" for a minio cluster, **`laf` would only implement minio
                  controller by default.** - "aws-s3" for aws s3 service - "qiniu"
                  for qiniu service - "google-cloud-storage" for google cloud storage
                  - "azure-blob-storage" for azure blob storage - "aliyun-oss" for
                  aliyun oss - ... (more could be added)'
                maxLength: 64
                minLength: 2
                pattern: '[a-zA-Z0-9-]+'
                type: string
              region:
                default: default
                description: The region name identifies the location of the store.
                  This is a required field and default value is "default"
                maxLength: 64
                minLength: 2
                pattern: '[a-z0-9-]+'
                type: string
              secretKey:
                description: SecretKey is the secret key which have admin rights of
                  the store service.
                type: string
              useSSL:
                default: false
                description: UseSSL indicates whether to use ssl to connect to the
                  store service.
                type: boolean
            required:
            - endpoint
            type: object
          status:
            description: StoreStatus defines the observed state of Store
            properties:
              capacity:
                description: The observed capacity of Store.
                properties:
                  bucketCount:
                    default: 0
                    description: The number of buckets. The default value is 0 which
                      means unlimited.
                    format: int64
                    minimum: 0
                    type: integer
                  objectCount:
                    default: 0
                    description: The number of objects. The default value is 0 which
                      means unlimited.
                    format: int64
                    minimum: 0
                    type: integer
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The storage space. The unit is MB. The default value
                      is 0 which means unlimited.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                  userCount:
                    description: The user count of a store.
                    format: int64
                    type: integer
                type: object
              conditions:
                description: 'Conditions - Type: Ready'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: users.oss.laf.dev
spec:
  group: oss.laf.dev
  names:
    kind: User
    listKind: UserList
    plural: users
    singular: user
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: User is the Schema for the users API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: UserSpec defines the desired state of User
            properties:
              appid:
                description: AppId is the unique identifier for the app, usually used
                  as the username of this User.
                maxLength: 32
                minLength: 3
                type: string
              capacity:
                description: Capacity that user desired.
                properties:
                  bucketCount:
                    default: 0
                    description: The user's number of buckets.
                    format: int64
                    minimum: 0
                    type: integer
                  objectCount:
                    default: 0
                    description: The user's number of objects.
                    format: int64
                    minimum: 0
                    type: integer
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The user's storage space. The default value is 0
                      which means unlimited.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              password:
                description: Password is the secret name of the user, which is used
                  to authenticate the user.
                maxLength: 64
                minLength: 3
                type: string
              provider:
                description: Provider name of a oss store. It's read-only after creation.
                  The controller will create the corresponding storage resources based
                  on this provider.
                type: string
              region:
                description: Region of oss store.
                type: string
            required:
            - appid
            - password
            - provider
            - region
            type: object
          status:
            description: UserStatus defines the observed state of User
            properties:
              accessKey:
                description: AccessKey is the access key of the user
                type: string
              capacity:
                description: The user's capacity observed by the controller.
                properties:
                  bucketCount:
                    default: 0
                    description: The user's number of buckets.
                    format: int64
                    minimum: 0
                    type: integer
                  objectCount:
                    default: 0
                    description: The user's number of objects.
                    format: int64
                    minimum: 0
                    type: integer
                  storage:
                    anyOf:
                    - type: integer
                    - type: string
                    description: The user's storage space. The default value is 0
                      which means unlimited.
                    pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                    x-kubernetes-int-or-string: true
                type: object
              conditions:
                description: 'Conditions - Type: Ready'
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              endpoint:
                description: Endpoint is the store service endpoint.
                type: string
              region:
                description: Region of oss store.
                type: string
              secretKey:
                description: SecretKey is the secret key of the user
                type: string
              storeName:
                description: StoreName of the oss store. It's read-only after creation.
                  The controller has created the corresponding storage resources based
                  on this store.
                type: string
              storeNamespace:
                type: string
            required:
            - region
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: oss-controller-manager
  namespace: oss-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: oss-leader-election-role
  namespace: oss-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: oss-manager-role
rules:
- apiGroups:
  - oss.laf.dev
  resources:
  - buckets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - oss.laf.dev
  resources:
  - buckets/finalizers
  verbs:
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - buckets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - stores
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - oss.laf.dev
  resources:
  - stores/finalizers
  verbs:
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - stores/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - users
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - oss.laf.dev
  resources:
  - users/finalizers
  verbs:
  - update
- apiGroups:
  - oss.laf.dev
  resources:
  - users/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oss-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: oss-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: oss-leader-election-rolebinding
  namespace: oss-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: oss-leader-election-role
subjects:
- kind: ServiceAccount
  name: oss-controller-manager
  namespace: oss-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oss-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oss-manager-role
subjects:
- kind: ServiceAccount
  name: oss-controller-manager
  namespace: oss-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: oss-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: oss-proxy-role
subjects:
- kind: ServiceAccount
  name: oss-controller-manager
  namespace: oss-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 362be751.laf.dev
    # leaderElectionReleaseOnCancel defines if the leader should step down volume
    # when the Manager ends. This requires the binary to immediately end when the
    # Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
    # speeds up voluntary leader transitions as the new leader don't have to wait
    # LeaseDuration time first.
    # In the default scaffold provided, the program ends immediately after
    # the manager stops, so would be fine to enable this option. However,
    # if you are doing or is intended to do any operation such as perform cleanups
    # after the manager stops then its usage might be unsafe.
    # leaderElectionReleaseOnCancel: true
kind: ConfigMap
metadata:
  name: oss-manager-config
  namespace: oss-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: oss-controller-manager-metrics-service
  namespace: oss-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: oss-controller-manager
  namespace: oss-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: docker.io/lafyun/kube-rbac-proxy:v0.12.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: ghcr.io/labring/laf-oss-controller:dev
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      securityContext:
        runAsNonRoot: true
      serviceAccountName: oss-controller-manager
      terminationGracePeriodSeconds: 10
