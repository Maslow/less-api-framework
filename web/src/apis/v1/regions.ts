// @ts-ignore
/* eslint-disable */
///////////////////////////////////////////////////////////////////////
//                                                                   //
// this file is autogenerated by service-generate                    //
// do not edit this file manually                                    //
//                                                                   //
///////////////////////////////////////////////////////////////////////
/// <reference path = "api-auto.d.ts" />
import request from "@/utils/request";
import useGlobalStore from "@/pages/globalStore";

/**
 * Get region list
 */
export async function RegionControllerGetRegions(
  params: Paths.RegionControllerGetRegions.BodyParameters | any,
): Promise<Paths.RegionControllerGetRegions.Responses> {
  // /v1/regions
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/regions`, {
    method: "GET",
    params: params,
  });
}

/**
 * Get resource option list
 */
export async function RegionControllerGetResourceOptions(
  params: Paths.RegionControllerGetResourceOptions.BodyParameters | any,
): Promise<Paths.RegionControllerGetResourceOptions.Responses> {
  // /v1/regions/resource-options
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/regions/resource-options`, {
    method: "GET",
    params: params,
  });
}

/**
 * Get resource option list by region id
 */
export async function RegionControllerGetResourceOptionsByRegionId(
  params: Paths.RegionControllerGetResourceOptionsByRegionId.BodyParameters | any,
): Promise<Paths.RegionControllerGetResourceOptionsByRegionId.Responses> {
  // /v1/regions/resource-options/{regionId}
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/regions/resource-options/${_params.regionId}`, {
    method: "GET",
    params: params,
  });
}

/**
 * Get resource template list
 */
export async function RegionControllerGetResourceBundles(
  params: Paths.RegionControllerGetResourceBundles.BodyParameters | any,
): Promise<Paths.RegionControllerGetResourceBundles.Responses> {
  // /v1/regions/resource-bundles
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/regions/resource-bundles`, {
    method: "GET",
    params: params,
  });
}
