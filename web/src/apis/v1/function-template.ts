// @ts-ignore
/* eslint-disable */
///////////////////////////////////////////////////////////////////////
//                                                                   //
// this file is autogenerated by service-generate                    //
// do not edit this file manually                                    //
//                                                                   //
///////////////////////////////////////////////////////////////////////
/// <reference path = "api-auto.d.ts" />
import request from "@/utils/request";
import useGlobalStore from "@/pages/globalStore";

/**
 * create a function template
 */
export async function FunctionTemplateControllerCreateFunctionTemplate(
  params: Definitions.CreateFunctionTemplateDto,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerCreateFunctionTemplate.Responses;
}> {
  // /v1/function-template/create
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  // return request(`/v1/function-template/create`, {
  return request(`http://100.127.251.45.nip.io/v1/function-template/create`, {
    method: "POST",
    data: params,
  });
}

/**
 * use a function template
 */
export async function FunctionTemplateControllerUseFunctionTemplate(
  params: Definitions.UseFunctionTemplateDto,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerUseFunctionTemplate.Responses;
}> {
  // /v1/function-template/use
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/use`, {
    method: "POST",
    data: params,
  });
}

/**
 * update a function template
 */
export async function FunctionTemplateControllerUpdateFunctionTemplate(
  params: Definitions.UpdateFunctionTemplateDto,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerUpdateFunctionTemplate.Responses;
}> {
  // /v1/function-template/update
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/update`, {
    method: "PATCH",
    data: params,
  });
}

/**
 * delete a function template
 */
export async function FunctionTemplateControllerDeleteFunctionTemplate(
  params: Paths.FunctionTemplateControllerDeleteFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerDeleteFunctionTemplate.Responses;
}> {
  // /v1/function-template/delete
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/${params.id}`, {
    method: "DELETE",
    data: params,
  });
}

/**
 * star a function template
 */
export async function FunctionTemplateControllerStarFunctionTemplate(
  params: Definitions.StarFunctionTemplateDto,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerStarFunctionTemplate.Responses;
}> {
  // /v1/function-template/star
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/star`, {
    method: "POST",
    data: params,
  });
}

/**
 * get function template user star state
 */
export async function FunctionTemplateControllerGetUserFunctionTemplateStarState(
  params: Paths.FunctionTemplateControllerGetUserFunctionTemplateStarState.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetUserFunctionTemplateStarState.Responses;
}> {
  // /v1/function-template/star
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/star/${params.id}`, {
    method: "GET",
    params: params,
  });
}

/**
 * get people who use this function template
 */
export async function FunctionTemplateControllerGetFunctionTemplateUsedBy(
  params: Paths.FunctionTemplateControllerGetFunctionTemplateUsedBy.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetFunctionTemplateUsedBy.Responses;
}> {
  // /v1/function-template/used-by
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/used-by/${params.id}`, {
    method: "GET",
    params: params,
  });
}

/**
 * get one function template
 */
export async function FunctionTemplateControllerGetOneFunctionTemplate(
  params: Paths.FunctionTemplateControllerGetOneFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetOneFunctionTemplate.Responses;
}> {
  // /v1/function-template/one
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/one/${params.id}`, {
    method: "GET",
    params: params,
  });
}

/**
 * get all function template
 */
export async function FunctionTemplateControllerGetAllFunctionTemplate(
  params: Paths.FunctionTemplateControllerGetAllFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetAllFunctionTemplate.Responses;
}> {
  // /v1/function-template/all
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/all`, {
    method: "GET",
    params: params,
  });
}

/**
 * get all function template
 */
export async function FunctionTemplateControllerGetAllFunctionTemplateByName(
  params: Paths.FunctionTemplateControllerGetAllFunctionTemplateByName.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetAllFunctionTemplateByName.Responses;
}> {
  // /v1/function-template/all-byname
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/all-byname`, {
    method: "GET",
    params: params,
  });
}

/**
 * get most star function template
 */
export async function FunctionTemplateControllerGetHotFunctionTemplate(
  params: Paths.FunctionTemplateControllerGetHotFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetHotFunctionTemplate.Responses;
}> {
  // /v1/function-template/hot
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/hot`, {
    method: "GET",
    params: params,
  });
}

/**
 * get my most star function template
 */
export async function FunctionTemplateControllerGetMyHotFunctionTemplate(
  params: Paths.FunctionTemplateControllerGetMyHotFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetMyHotFunctionTemplate.Responses;
}> {
  // /v1/function-template/my-hot
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/my-hot`, {
    method: "GET",
    params: params,
  });
}

/**
 * get most star function template
 */
export async function FunctionTemplateControllerGetMyFunctionTemplate(
  params: Paths.FunctionTemplateControllerGetMyFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetMyFunctionTemplate.Responses;
}> {
  // /v1/function-template/my
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/my`, {
    method: "GET",
    params: params,
  });
}

/**
 * get most star function template
 */
export async function FunctionTemplateControllerGetMyFunctionTemplateByName(
  params: Paths.FunctionTemplateControllerGetMyFunctionTemplateByName.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetMyFunctionTemplateByName.Responses;
}> {
  // /v1/function-template/my-byname
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/my-byname`, {
    method: "GET",
    params: params,
  });
}

/**
 * get my star function template
 */
export async function FunctionTemplateControllerGetMyStaredFunctionTemplate(
  params: Paths.FunctionTemplateControllerGetMyStaredFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetMyStaredFunctionTemplate.Responses;
}> {
  // /v1/function-template/my-star
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/my-star`, {
    method: "GET",
    params: params,
  });
}

/**
 * get my recent used function template
 */
export async function FunctionTemplateControllerGetMyRecentUseFunctionTemplate(
  params: Paths.FunctionTemplateControllerGetMyRecentUseFunctionTemplate.BodyParameters,
): Promise<{
  error: string;
  data: Paths.FunctionTemplateControllerGetMyRecentUseFunctionTemplate.Responses;
}> {
  // /v1/function-template/my-recent
  let _params: { [key: string]: any } = {
    appid: useGlobalStore.getState().currentApp?.appid || "",
    ...params,
  };
  return request(`/v1/function-template/my-recent`, {
    method: "GET",
    params: params,
  });
}
