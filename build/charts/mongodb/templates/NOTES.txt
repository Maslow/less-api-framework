
Use mongo client in cluster:

  export ROOT_USERNAME=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-{{ .Chart.Name }}-init -o jsonpath="{.data.username}" | base64 -d)
  export ROOT_PASSWORD=$(kubectl get secret --namespace {{ .Release.Namespace }} {{ .Release.Name }}-{{ .Chart.Name }}-init -o jsonpath="{.data.password}" | base64 -d)
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "mongodb.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")

Connection URI:
  export CONNECTION_URI="mongodb://$ROOT_USERNAME:$ROOT_PASSWORD@{{ .Chart.Name }}-0.{{ .Values.service.name }}.{{ .Release.Namespace }}.svc.cluster.local:27017/{{ .Values.db.database }}?authSource=admin&replicaSet={{ .Values.db.replicaSetName }}&w=majority"

Connect in cluster:
  kubectl run mongo --rm -it --env="URI=$CONNECTION_URI" --image={{ .Values.image.repository }}:{{ .Values.image.tag }} -- sh
